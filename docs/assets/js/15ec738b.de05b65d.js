"use strict";(self.webpackChunketlnetdocumentation=self.webpackChunketlnetdocumentation||[]).push([[4173],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(a),u=n,h=m["".concat(l,".").concat(u)]||m[u]||c[u]||i;return a?r.createElement(h,o(o({ref:t},d),{},{components:a})):r.createElement(h,o({ref:t},d))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},58342:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),o=["components"],s={sidebar_position:15},l="Sorting",p={unversionedId:"recipes/sorting",id:"recipes/sorting",title:"Sorting",description:"For ETL.ET streams can have specific characteristics. These characteristics are sometimes required by some operators. There are some operator to issue streams with there characteristics.",source:"@site/docs/recipes/15_sorting.md",sourceDirName:"recipes",slug:"/recipes/sorting",permalink:"/Etl.Net/docs/recipes/sorting",editUrl:"https://github.com/paillave/Etl.Net/blob/develop/documentation/docs/recipes/15_sorting.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Restrict rows",permalink:"/Etl.Net/docs/recipes/changeScope"},next:{title:"Core",permalink:"/Etl.Net/docs/operators/core"}},d={},c=[{value:"SortedStream",id:"sortedstream",level:2},{value:"KeyedStream",id:"keyedstream",level:2},{value:"SingleStream",id:"singlestream",level:2}],m={toc:c};function u(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sorting"},"Sorting"),(0,i.kt)("p",null,"For ETL.ET streams can have specific characteristics. These characteristics are sometimes required by some operators. There are some operator to issue streams with there characteristics."),(0,i.kt)("h2",{id:"sortedstream"},"SortedStream"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedStream")," is a stream that issues payloads in a specific order. The stream hosts the sorting criteria and its type for the operators that uses it can operate properly with input payloads."),(0,i.kt)("p",null,"There are two ways to make a ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedStream"),"."),(0,i.kt)("p",null,"From a ",(0,i.kt)("inlineCode",{parentName:"p"},"Stream")," that issues payloads that are not sorted:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'var sortedStream = stream.Sort("Sort values", i => i.OutputId);\n')),(0,i.kt)("p",null,"To sort on different criterias, and with different direction:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'var sortedStream = stream.Sort("Sort values", i => new { i.OutputId, i.Label });\n')),(0,i.kt)("p",null,"To sort with different directions:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'// Sort Label descending, and then by OutputId\nvar sortedStream = stream.Sort("Sort values", i => new { i.OutputId, i.Label }, new { Label = -1, OutputId = 2});\n')),(0,i.kt)("p",null,"It can happen that the develop knows that, as a matter of a fact, a ",(0,i.kt)("inlineCode",{parentName:"p"},"Stream")," is actually sorted, for example when values come from a query from a database engine. In this situation, the point is just to check if the stream is actually sorted:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'var sortedStream = stream.EnsureSorted("Ensure sorted", i => i.OutputId);\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EnsureSorted")," operator work in the same way that ",(0,i.kt)("inlineCode",{parentName:"p"},"Sort"),"."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If a payload doesn't obey the sorting criteria, the ",(0,i.kt)("inlineCode",{parentName:"p"},"EnsureSorted")," operator will issue an exception, causing the process to fail."))),(0,i.kt)("h2",{id:"keyedstream"},"KeyedStream"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"KeyedStream")," is a specific ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedStream"),". It has the same characteristics than a ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedStream")," except that there are no duplicates on the sorting key."),(0,i.kt)("p",null,"To make a ",(0,i.kt)("inlineCode",{parentName:"p"},"KeyedStream")," out of a stream that is not sorted, first sort it, then ensure it is keyed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'var keyedStream1 = stream\n    .Sort("Sort values1", i => i.OutputId)\n    .EnsureKeyed("Ensure values are keyed1", i => i.OutputId);\n\nvar keyedStream2 = stream\n    .Sort("Sort values2", i => new { i.OutputId, i.Label })\n    .EnsureKeyed("Ensure values are keyed2", i => new { i.OutputId, i.Label });\n\nvar keyedStream3 = stream\n    .Sort("Sort values3", i => new { i.OutputId, i.Label }, new { Label = -1, OutputId = 2})\n    .EnsureKeyed("Ensure values are keyed3", i => new { i.OutputId, i.Label }, new { Label = -1, OutputId = 2});\n')),(0,i.kt)("p",null,"Like for ",(0,i.kt)("inlineCode",{parentName:"p"},"SortedStream")," the develop may know that a regular stream is, as a matter of a fact keyed. Then just use ",(0,i.kt)("inlineCode",{parentName:"p"},"EnsureKeyed")," for this purpose."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Like ",(0,i.kt)("inlineCode",{parentName:"p"},"EnsureSorted")," operator, ",(0,i.kt)("inlineCode",{parentName:"p"},"EnsureKeyed")," will issue an exception, causing the process to fail, if the stream is not actually keyed."))),(0,i.kt)("h2",{id:"singlestream"},"SingleStream"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"SingleStream")," is a specific ",(0,i.kt)("inlineCode",{parentName:"p"},"KeyedStream")," that has the payload it self a the key criteria. What characterizes it is that not more and not less than one event will be emitted in this stream."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"EnsureSingle")," is the way to get a ",(0,i.kt)("inlineCode",{parentName:"p"},"SingleStream")," and checks if the streams is actually a one event stream."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},'var singleStream = stream.EnsureSingle("Ensure only one event is emitted");\n')),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"EnsureSingle")," will issue an exception, causing the process to fail, if the input stream completes without having emitted a payload previously, or if a payload is emitted whereas another one was issued before."))))}u.isMDXComponent=!0}}]);