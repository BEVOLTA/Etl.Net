### YamlMime:ManagedReference
items:
- uid: Paillave.Etl.Extensions.SelectSectionEx
  commentId: T:Paillave.Etl.Extensions.SelectSectionEx
  id: SelectSectionEx
  parent: Paillave.Etl.Extensions
  children:
  - Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior})
  - Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  - Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior})
  - Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  langs:
  - csharp
  - vb
  name: SelectSectionEx
  nameWithType: SelectSectionEx
  fullName: Paillave.Etl.Extensions.SelectSectionEx
  type: Class
  source:
    id: SelectSectionEx
    path: ''
    startLine: 984
  assemblies:
  - cs.temp.dll
  namespace: Paillave.Etl.Extensions
  syntax:
    content: public static class SelectSectionEx
    content.vb: Public Module SelectSectionEx
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior})
  commentId: M:Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior})
  id: SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior})
  isExtensionMethod: true
  parent: Paillave.Etl.Extensions.SelectSectionEx
  langs:
  - csharp
  - vb
  name: SelectSection<TIn>(IStream<TIn>, String, KeepingState, Func<TIn, SwitchBehavior>)
  nameWithType: SelectSectionEx.SelectSection<TIn>(IStream<TIn>, String, KeepingState, Func<TIn, SwitchBehavior>)
  fullName: Paillave.Etl.Extensions.SelectSectionEx.SelectSection<TIn>(IStream<TIn>, System.String, KeepingState, System.Func<TIn, SwitchBehavior>)
  type: Method
  source:
    id: SelectSection
    path: ''
    startLine: 986
  assemblies:
  - cs.temp.dll
  namespace: Paillave.Etl.Extensions
  syntax:
    content: public static IStream<TIn> SelectSection<TIn>(this IStream<TIn> stream, string name, KeepingState initialState, Func<TIn, SwitchBehavior> switcher)
    parameters:
    - id: stream
      type: IStream{{TIn}}
    - id: name
      type: System.String
    - id: initialState
      type: KeepingState
    - id: switcher
      type: System.Func{{TIn},SwitchBehavior}
    typeParameters:
    - id: TIn
    return:
      type: IStream{{TIn}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSection(Of TIn)(stream As IStream(Of TIn), name As String, initialState As KeepingState, switcher As Func(Of TIn, SwitchBehavior)) As IStream(Of TIn)
  overload: Paillave.Etl.Extensions.SelectSectionEx.SelectSection*
  nameWithType.vb: SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), String, KeepingState, Func(Of TIn, SwitchBehavior))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Paillave.Etl.Extensions.SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), System.String, KeepingState, System.Func(Of TIn, SwitchBehavior))
  name.vb: SelectSection(Of TIn)(IStream(Of TIn), String, KeepingState, Func(Of TIn, SwitchBehavior))
- uid: Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior})
  commentId: M:Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior})
  id: SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior})
  isExtensionMethod: true
  parent: Paillave.Etl.Extensions.SelectSectionEx
  langs:
  - csharp
  - vb
  name: SelectSection<TIn>(IStream<TIn>, String, Func<TIn, SwitchBehavior>)
  nameWithType: SelectSectionEx.SelectSection<TIn>(IStream<TIn>, String, Func<TIn, SwitchBehavior>)
  fullName: Paillave.Etl.Extensions.SelectSectionEx.SelectSection<TIn>(IStream<TIn>, System.String, System.Func<TIn, SwitchBehavior>)
  type: Method
  source:
    id: SelectSection
    path: ''
    startLine: 995
  assemblies:
  - cs.temp.dll
  namespace: Paillave.Etl.Extensions
  syntax:
    content: public static IStream<TIn> SelectSection<TIn>(this IStream<TIn> stream, string name, Func<TIn, SwitchBehavior> switcher)
    parameters:
    - id: stream
      type: IStream{{TIn}}
    - id: name
      type: System.String
    - id: switcher
      type: System.Func{{TIn},SwitchBehavior}
    typeParameters:
    - id: TIn
    return:
      type: IStream{{TIn}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSection(Of TIn)(stream As IStream(Of TIn), name As String, switcher As Func(Of TIn, SwitchBehavior)) As IStream(Of TIn)
  overload: Paillave.Etl.Extensions.SelectSectionEx.SelectSection*
  nameWithType.vb: SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), String, Func(Of TIn, SwitchBehavior))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Paillave.Etl.Extensions.SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), System.String, System.Func(Of TIn, SwitchBehavior))
  name.vb: SelectSection(Of TIn)(IStream(Of TIn), String, Func(Of TIn, SwitchBehavior))
- uid: Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  commentId: M:Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  id: SelectSection``1(IStream{``0},System.String,KeepingState,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  isExtensionMethod: true
  parent: Paillave.Etl.Extensions.SelectSectionEx
  langs:
  - csharp
  - vb
  name: SelectSection<TIn>(IStream<TIn>, String, KeepingState, Func<TIn, SwitchBehavior>, Func<TIn, SwitchBehavior>)
  nameWithType: SelectSectionEx.SelectSection<TIn>(IStream<TIn>, String, KeepingState, Func<TIn, SwitchBehavior>, Func<TIn, SwitchBehavior>)
  fullName: Paillave.Etl.Extensions.SelectSectionEx.SelectSection<TIn>(IStream<TIn>, System.String, KeepingState, System.Func<TIn, SwitchBehavior>, System.Func<TIn, SwitchBehavior>)
  type: Method
  source:
    id: SelectSection
    path: ''
    startLine: 1003
  assemblies:
  - cs.temp.dll
  namespace: Paillave.Etl.Extensions
  syntax:
    content: public static IStream<TIn> SelectSection<TIn>(this IStream<TIn> stream, string name, KeepingState initialState, Func<TIn, SwitchBehavior> switchToKeep, Func<TIn, SwitchBehavior> switchToIgnore)
    parameters:
    - id: stream
      type: IStream{{TIn}}
    - id: name
      type: System.String
    - id: initialState
      type: KeepingState
    - id: switchToKeep
      type: System.Func{{TIn},SwitchBehavior}
    - id: switchToIgnore
      type: System.Func{{TIn},SwitchBehavior}
    typeParameters:
    - id: TIn
    return:
      type: IStream{{TIn}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSection(Of TIn)(stream As IStream(Of TIn), name As String, initialState As KeepingState, switchToKeep As Func(Of TIn, SwitchBehavior), switchToIgnore As Func(Of TIn, SwitchBehavior)) As IStream(Of TIn)
  overload: Paillave.Etl.Extensions.SelectSectionEx.SelectSection*
  nameWithType.vb: SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), String, KeepingState, Func(Of TIn, SwitchBehavior), Func(Of TIn, SwitchBehavior))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Paillave.Etl.Extensions.SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), System.String, KeepingState, System.Func(Of TIn, SwitchBehavior), System.Func(Of TIn, SwitchBehavior))
  name.vb: SelectSection(Of TIn)(IStream(Of TIn), String, KeepingState, Func(Of TIn, SwitchBehavior), Func(Of TIn, SwitchBehavior))
- uid: Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  commentId: M:Paillave.Etl.Extensions.SelectSectionEx.SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  id: SelectSection``1(IStream{``0},System.String,System.Func{``0,SwitchBehavior},System.Func{``0,SwitchBehavior})
  isExtensionMethod: true
  parent: Paillave.Etl.Extensions.SelectSectionEx
  langs:
  - csharp
  - vb
  name: SelectSection<TIn>(IStream<TIn>, String, Func<TIn, SwitchBehavior>, Func<TIn, SwitchBehavior>)
  nameWithType: SelectSectionEx.SelectSection<TIn>(IStream<TIn>, String, Func<TIn, SwitchBehavior>, Func<TIn, SwitchBehavior>)
  fullName: Paillave.Etl.Extensions.SelectSectionEx.SelectSection<TIn>(IStream<TIn>, System.String, System.Func<TIn, SwitchBehavior>, System.Func<TIn, SwitchBehavior>)
  type: Method
  source:
    id: SelectSection
    path: ''
    startLine: 1013
  assemblies:
  - cs.temp.dll
  namespace: Paillave.Etl.Extensions
  syntax:
    content: public static IStream<TIn> SelectSection<TIn>(this IStream<TIn> stream, string name, Func<TIn, SwitchBehavior> switchToKeep, Func<TIn, SwitchBehavior> switchToIgnore)
    parameters:
    - id: stream
      type: IStream{{TIn}}
    - id: name
      type: System.String
    - id: switchToKeep
      type: System.Func{{TIn},SwitchBehavior}
    - id: switchToIgnore
      type: System.Func{{TIn},SwitchBehavior}
    typeParameters:
    - id: TIn
    return:
      type: IStream{{TIn}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SelectSection(Of TIn)(stream As IStream(Of TIn), name As String, switchToKeep As Func(Of TIn, SwitchBehavior), switchToIgnore As Func(Of TIn, SwitchBehavior)) As IStream(Of TIn)
  overload: Paillave.Etl.Extensions.SelectSectionEx.SelectSection*
  nameWithType.vb: SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), String, Func(Of TIn, SwitchBehavior), Func(Of TIn, SwitchBehavior))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Paillave.Etl.Extensions.SelectSectionEx.SelectSection(Of TIn)(IStream(Of TIn), System.String, System.Func(Of TIn, SwitchBehavior), System.Func(Of TIn, SwitchBehavior))
  name.vb: SelectSection(Of TIn)(IStream(Of TIn), String, Func(Of TIn, SwitchBehavior), Func(Of TIn, SwitchBehavior))
references:
- uid: Paillave.Etl.Extensions
  commentId: N:Paillave.Etl.Extensions
  name: Paillave.Etl.Extensions
  nameWithType: Paillave.Etl.Extensions
  fullName: Paillave.Etl.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Paillave.Etl.Extensions.SelectSectionEx.SelectSection*
  commentId: Overload:Paillave.Etl.Extensions.SelectSectionEx.SelectSection
  name: SelectSection
  nameWithType: SelectSectionEx.SelectSection
  fullName: Paillave.Etl.Extensions.SelectSectionEx.SelectSection
- uid: IStream{{TIn}}
  commentId: '!:IStream{``0}'
  definition: IStream`1
  name: IStream<TIn>
  nameWithType: IStream<TIn>
  fullName: IStream<TIn>
  nameWithType.vb: IStream(Of TIn)
  fullName.vb: IStream(Of TIn)
  name.vb: IStream(Of TIn)
  spec.csharp:
  - uid: IStream`1
    name: IStream
    nameWithType: IStream
    fullName: IStream
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IStream`1
    name: IStream
    nameWithType: IStream
    fullName: IStream
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: KeepingState
  isExternal: true
  name: KeepingState
  nameWithType: KeepingState
  fullName: KeepingState
- uid: System.Func{{TIn},SwitchBehavior}
  commentId: T:System.Func{``0,SwitchBehavior}
  parent: System
  definition: System.Func`2
  name: Func<TIn, SwitchBehavior>
  nameWithType: Func<TIn, SwitchBehavior>
  fullName: System.Func<TIn, SwitchBehavior>
  nameWithType.vb: Func(Of TIn, SwitchBehavior)
  fullName.vb: System.Func(Of TIn, SwitchBehavior)
  name.vb: Func(Of TIn, SwitchBehavior)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SwitchBehavior
    name: SwitchBehavior
    nameWithType: SwitchBehavior
    fullName: SwitchBehavior
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TIn
    nameWithType: TIn
    fullName: TIn
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SwitchBehavior
    name: SwitchBehavior
    nameWithType: SwitchBehavior
    fullName: SwitchBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IStream`1
  isExternal: true
  name: IStream<>
  nameWithType: IStream<>
  fullName: IStream<>
  nameWithType.vb: IStream(Of )
  fullName.vb: IStream(Of )
  name.vb: IStream(Of )
  spec.csharp:
  - uid: IStream`1
    name: IStream
    nameWithType: IStream
    fullName: IStream
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IStream`1
    name: IStream
    nameWithType: IStream
    fullName: IStream
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
